language: c++

branches:
  except:
    - automatic

cache:
  directories:
    - download

matrix:
  include:
    - os: linux
      sudo: required
      dist: bionic
      env:
        - _BUILD=win32
        - _MINGW=mingw32
        - _HOST=i686-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin string-machine-"$_BUILD"
        - rm -f string-machine-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/string-machine-"$_BUILD".zip string-machine-"$_BUILD"
    - os: linux
      sudo: required
      dist: bionic
      env:
        - _BUILD=win64
        - _MINGW=mingw64
        - _HOST=x86_64-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin string-machine-"$_BUILD"
        - rm -f string-machine-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/string-machine-"$_BUILD".zip string-machine-"$_BUILD"
    - os: osx
      sudo: required
      env:
        - _BUILD=macos
      script:
        - bash .travis/script-macos.sh
        - cp -av bin string-machine-"$_BUILD"
        - rm -f string-machine-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/string-machine-"$_BUILD".zip string-machine-"$_BUILD"
    - os: linux
      sudo: required
      dist: trusty
      env:
        - _BITS=64
        - _BUILD=linux64
      before_install:
        - sudo apt-get update -qq
      install:
        - sudo apt-get install checkinstall libcairo2-dev
      script:
        - bash .travis/script-linux.sh
        - cp -drfv bin string-machine-"$_BUILD"
        - rm -f string-machine-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/string-machine-"$_BUILD".zip string-machine-"$_BUILD"
        - echo "Digital model of electronic string ensemble instrument" > description-pak
        - sudo checkinstall --type=debian --install=no --default --pkgname=string-machine --pkgversion="`git describe --abbrev=0 | sed 's/^v//'``git log -n 1 --pretty=format:"+%cd~git%h" --date=short master | sed 's/-//g'`" --pkgarch=amd64 --pkgrelease=0jpc1 --pkglicense=BSL-1.0 --pkggroup=sound --maintainer="jp-dev@inbox.ru" --nodoc
        - sudo mv -f *.deb release/string-machine-"$_BUILD".deb

before_script:
  - sed -i~ 's%/usr/local%/usr%g' plugins/*/Makefile

before_deploy:
  - |
    if test "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false"; then
      export TRAVIS_TAG=automatic
      git tag -f "$TRAVIS_TAG"
    fi

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file: release/*
  file_glob: true
  skip_cleanup: true
  prerelease: true
  overwrite: true
  on:
    branch: master

env:
  global:
    secure: Zm4zN4XCJ7dWilM0kS5aze4xiwTPjGXJaGTq9xJ5ohFWyiwwJQCd+DgYlzaHSDgnGprpK8jCx09Ew3R/1LsRG5FAxwZEAqXHe3iKqRWDg8D+JArDBJU6dOlY0sjKbz4KYpY4qRwEY4h1MpHHOWI3Q1UbSMzkSFWIbfmbVFwwUj7A4O5hy4RByZHZPPkbUoIQEjBR4iG+W5tS5vyMPB7XdSdR0I+ogYuEx1HYSTEZZjITvEg3+G388QYKPan+ubZiw699UeWOPWR1HB8fXES0XZZ5b9gzFWya8V2EhLWhaAq29qM2yyG4d0N2Iy/nwhJCgImhiGRybSgy7MLfhqKHi9rfnZ7ebRcMtR2wLrzBdC2u72NuzsbkCAqQisTCgq2rmk+uXF6zwAPn52h7In0uox9kAFoxmp/oGNZYXnvsw+2uzyRIdzfym/fpQpfVryVpNr/ffMmUbjs47GSMBJx4jBi+aoj9uRsUGlod5ugXHKwiayz2Qy97IhWJIEC5Z/EMP/50jintyDC0VwXAj2ZWA5mTm8/WOYMj39mSTPu+kkFJ6/U1SaQOACIPLcj2OxID430B9TNdTXXWTH0H01rTxgT062Kn9ouuPnBXk/xGIDBjZqXf/lLSW8bLYJKcF5yffLAov536JXRmNDYLBqUQOtXgBOzH8lq9+AHfhx3Hlro=
